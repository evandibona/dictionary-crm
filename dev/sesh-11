Trunk
  Branch
    Leaf

Add
  +t    +b     +l
  addT  addB  addL

Navigate
  forEachEntry(d, fx)
  forEachTrunk(d, fx)
    forEachEntry(d, fx
      if entry['isNode']
        fx(entry)
      end
    )
  forEachChild(d, x, fx)

  forPrevEntry
  forPrevTrunk
  forPrevChild


Print
  

a (adjacent)        s (summarize)     d (diagram)         f (find)    
j (judge)           k (know)          l (lineage)         ; (print)

adjacent    > siblings. All with common parent. 
summarize   > Recent Entries, name, phone, email, company, etc.
diagram     > full graph of self and descendants, with ref numbers. 
key         > get address for a string match with data. 
judge       > breakdown of an entry, as human readable as possible. 
lineage     > parent, grandparent, dates. Or self & date. 


+t (add-trunk ) ( refName -- ) 
+b (add-branch) ( trunkName "" -- )
+l ( add-leaf ) ( trk/Bch   "" -- )

## Attribute Grabbers, most recent. 
george-bruno 
  full-name
  phone
  cell
  email
  address

--------

## Ideas
  - Have a system for building an index. 
      - The index Object could be
          { ['prospect-key']={ 123456, { 223456, 323456 } }, ... }


